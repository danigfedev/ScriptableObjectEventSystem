using UnityEngine;
using UnityEngine.Events;

public class <SCRIPT_NAME> : MonoBehaviour
{
    [System.Serializable]
    public class CustomUnityEvent : UnityEvent<<ARGUMENT_TYPE_LIST>> { } //ARGUMENT_TYPE_LIST -> Type1, Type2, Type3...

    [SerializeField] private <SO_EVENT_NAME> <SO_EVENT_FIELD_NAME>;
    [SerializeField] private CustomUnityEvent response;

    void OnEnable()
    {
        <SO_EVENT_FIELD_NAME>.AddListener(this);
    }

    void OnDisable()
    {
        <SO_EVENT_FIELD_NAME>.RemoveListener(this);
    }

    public void RiseEvent(<ARGUMENT_LIST_DEFINITION>)//Type1 arg1, Type2 arg2, Type3 arg3...
    {
        response.Invoke(<ARGUMENT_LIST>); //arg1, arg2, arg3...
    }

}
